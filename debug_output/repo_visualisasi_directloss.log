2025-05-07 13:46:23,221 DEBUG fetch_aal_geojson SQL:

        SELECT json_build_object(
          'type',       'FeatureCollection',
          'features',   COALESCE(json_agg(f), '[]'::json)
        ) AS geojson
        FROM (
          SELECT json_build_object(
            'type',     'Feature',
            'geometry', ST_AsGeoJSON(p.geom)::json,
            'properties', to_jsonb(hap)
          ) AS f
          FROM hasil_aal_provinsi hap
          JOIN provinsi p
            ON TRIM(LOWER(p.provinsi)) = TRIM(LOWER(hap.provinsi))
          WHERE 1=1
        ) sub;
        
2025-05-07 13:46:23,226 DEBUG fetch_aal_provinsi_list SQL:

        SELECT provinsi
        FROM hasil_aal_provinsi
        WHERE provinsi IS NOT NULL AND provinsi <> ''
        ORDER BY provinsi
        
2025-05-07 17:18:16,033 DEBUG fetch_aal_geojson SQL:

        SELECT json_build_object(
          'type',       'FeatureCollection',
          'features',   COALESCE(json_agg(f), '[]'::json)
        ) AS geojson
        FROM (
          SELECT json_build_object(
            'type',     'Feature',
            'geometry', ST_AsGeoJSON(p.geom)::json,
            'properties', to_jsonb(hap)
          ) AS f
          FROM hasil_aal_provinsi hap
          JOIN provinsi p
            ON TRIM(LOWER(p.provinsi)) = TRIM(LOWER(hap.provinsi))
          WHERE 1=1
        ) sub;
        
2025-05-07 17:18:16,038 DEBUG fetch_aal_provinsi_list SQL:

        SELECT provinsi
        FROM hasil_aal_provinsi
        WHERE provinsi IS NOT NULL AND provinsi <> ''
        ORDER BY provinsi
        
2025-05-07 21:55:23,017 DEBUG fetch_aal_geojson SQL:

        SELECT json_build_object(
          'type',       'FeatureCollection',
          'features',   COALESCE(json_agg(f), '[]'::json)
        ) AS geojson
        FROM (
          SELECT json_build_object(
            'type',     'Feature',
            'geometry', ST_AsGeoJSON(p.geom)::json,
            'properties', to_jsonb(hap)
          ) AS f
          FROM hasil_aal_provinsi hap
          JOIN provinsi p
            ON TRIM(LOWER(p.provinsi)) = TRIM(LOWER(hap.provinsi))
          WHERE 1=1
        ) sub;
        
2025-05-07 21:55:23,025 DEBUG fetch_aal_provinsi_list SQL:

        SELECT provinsi
        FROM hasil_aal_provinsi
        WHERE provinsi IS NOT NULL AND provinsi <> ''
        ORDER BY provinsi
        
2025-05-07 21:56:32,138 DEBUG fetch_aal_data SQL for provinsi=DAERAH ISTIMEWA YOGYAKARTA
2025-05-07 21:57:18,961 DEBUG fetch_geojson SQL:

        SELECT json_build_object(
          'type', 'FeatureCollection',
          'features', COALESCE(json_agg(f), '[]'::json)
        ) AS geojson
        FROM (
          SELECT json_build_object(
            'type', 'Feature',
            'geometry', ST_AsGeoJSON(b.geom)::json,
            'properties',
              -- drop geom, provinsi, kota then re-add non-null
              (to_jsonb(b)
                 - 'geom'
                 - 'provinsi'
                 - 'kota'
              )
              || jsonb_build_object(
                   'provinsi', COALESCE(b.provinsi, ''),
                   'kota',    COALESCE(b.kota, '')
                 )
              || to_jsonb(d)
          ) AS f
          FROM bangunan_copy b
          JOIN hasil_proses_directloss d USING(id_bangunan)
          WHERE 1=1 AND TRIM(LOWER(b.provinsi)) = TRIM(LOWER(:provinsi)) AND TRIM(LOWER(b.kota)) = TRIM(LOWER(:kota))
        ) sub;
        
2025-05-07 21:59:23,761 DEBUG fetch_aal_geojson SQL:

        SELECT json_build_object(
          'type',       'FeatureCollection',
          'features',   COALESCE(json_agg(f), '[]'::json)
        ) AS geojson
        FROM (
          SELECT json_build_object(
            'type',     'Feature',
            'geometry', ST_AsGeoJSON(p.geom)::json,
            'properties', to_jsonb(hap)
          ) AS f
          FROM hasil_aal_provinsi hap
          JOIN provinsi p
            ON TRIM(LOWER(p.provinsi)) = TRIM(LOWER(hap.provinsi))
          WHERE 1=1
        ) sub;
        
2025-05-07 21:59:23,765 DEBUG fetch_aal_provinsi_list SQL:

        SELECT provinsi
        FROM hasil_aal_provinsi
        WHERE provinsi IS NOT NULL AND provinsi <> ''
        ORDER BY provinsi
        
2025-05-07 21:59:32,683 DEBUG fetch_geojson SQL:

        SELECT json_build_object(
          'type', 'FeatureCollection',
          'features', COALESCE(json_agg(f), '[]'::json)
        ) AS geojson
        FROM (
          SELECT json_build_object(
            'type', 'Feature',
            'geometry', ST_AsGeoJSON(b.geom)::json,
            'properties',
              -- drop geom, provinsi, kota then re-add non-null
              (to_jsonb(b)
                 - 'geom'
                 - 'provinsi'
                 - 'kota'
              )
              || jsonb_build_object(
                   'provinsi', COALESCE(b.provinsi, ''),
                   'kota',    COALESCE(b.kota, '')
                 )
              || to_jsonb(d)
          ) AS f
          FROM bangunan_copy b
          JOIN hasil_proses_directloss d USING(id_bangunan)
          WHERE 1=1 AND TRIM(LOWER(b.provinsi)) = TRIM(LOWER(:provinsi)) AND TRIM(LOWER(b.kota)) = TRIM(LOWER(:kota))
        ) sub;
        
2025-05-07 22:00:46,091 DEBUG fetch_geojson SQL:

        SELECT json_build_object(
          'type', 'FeatureCollection',
          'features', COALESCE(json_agg(f), '[]'::json)
        ) AS geojson
        FROM (
          SELECT json_build_object(
            'type', 'Feature',
            'geometry', ST_AsGeoJSON(b.geom)::json,
            'properties',
              -- drop geom, provinsi, kota then re-add non-null
              (to_jsonb(b)
                 - 'geom'
                 - 'provinsi'
                 - 'kota'
              )
              || jsonb_build_object(
                   'provinsi', COALESCE(b.provinsi, ''),
                   'kota',    COALESCE(b.kota, '')
                 )
              || to_jsonb(d)
          ) AS f
          FROM bangunan_copy b
          JOIN hasil_proses_directloss d USING(id_bangunan)
          WHERE 1=1 AND TRIM(LOWER(b.provinsi)) = TRIM(LOWER(:provinsi)) AND TRIM(LOWER(b.kota)) = TRIM(LOWER(:kota))
        ) sub;
        
2025-05-08 10:48:35,255 DEBUG fetch_provinsi SQL:

        SELECT DISTINCT COALESCE(b.provinsi, '')
        FROM hasil_proses_directloss d
        JOIN bangunan_copy b USING (id_bangunan)
        WHERE b.provinsi IS NOT NULL
        ORDER BY b.provinsi
        
2025-05-08 10:49:33,125 DEBUG fetch_aal_geojson SQL:

        SELECT json_build_object(
          'type',       'FeatureCollection',
          'features',   COALESCE(json_agg(f), '[]'::json)
        ) AS geojson
        FROM (
          SELECT json_build_object(
            'type',     'Feature',
            'geometry', ST_AsGeoJSON(p.geom)::json,
            'properties', to_jsonb(hap)
          ) AS f
          FROM hasil_aal_provinsi hap
          JOIN provinsi p
            ON TRIM(LOWER(p.provinsi)) = TRIM(LOWER(hap.provinsi))
          WHERE 1=1
        ) sub;
        
2025-05-08 10:49:33,126 DEBUG fetch_aal_provinsi_list SQL:

        SELECT provinsi
        FROM hasil_aal_provinsi
        WHERE provinsi IS NOT NULL AND provinsi <> ''
        ORDER BY provinsi
        
2025-05-08 10:49:36,362 DEBUG fetch_aal_data SQL for provinsi=KALIMANTAN TENGAH
